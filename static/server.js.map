{"version":3,"sources":["webpack:///webpack/bootstrap 361c1ba3cf6072ac641c","webpack:///./src/server/Station.js","webpack:///./src/secret/connect.js","webpack:///external \"body-parser\"","webpack:///external \"express\"","webpack:///external \"serialport\"","webpack:///./src/server/index.js"],"names":["Station","id","logData","uid","console","log","waterLevel","humidityLevel","waterGateState","waterGateOpenedAt","openTime","lvl","state","time","Express","require","SerialPort","bodyParser","connect","app","Server","init","disable","use","urlencoded","extended","json","openSerialport","createStations","routes","startServer","serialport","parser","parsers","readline","handleSerialPortEvents","on","err","data","slice","stations","entries","station","length","initNewStation","val","setWaterLevel","setHumidityLevel","getStationWithUid","setWaterGateState","setWaterGateOpenedAt","Date","now","writeToSerialPort","str","i","write","Buffer","shouldWaterGateOpen","waterPrct","convertWaterHeightToPrct","humidPrct","convertHumidityValToPrct","getWaterGateOpenedAt","getWaterGateState","getOptions","req","res","next","get","setStationGateState","body","tankId","Error","setBigButton","allTanksActive","getBigButton","getWaterLevel","parseInt","params","getStationGateState","gateState","header","options","post","sendStatus","set","process","env","PORT","port","server","listen","amount","push","sUid","setUid","getUid","forEach","s","prct","Math","floor"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Applications/XAMPP/xamppfiles/htdocs/jaar_2/AWS_v2/static\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 361c1ba3cf6072ac641c","export default class Station {\n  constructor(id) {\n    this.id = id;\n    this.uid = null;\n    this.waterLevel = null;\n    this.humidityLevel = null;\n    this.waterGateState = false;\n    this.waterGateOpenedAt = null;\n    this.openTime = 30 * 1000;\n  }\n\n  getUid() {\n    return this.uid;\n  }\n\n  setUid(uid) {\n    this.uid = uid;\n  }\n\n  getWaterLevel() {\n    return this.waterLevel;\n  }\n\n  setWaterLevel(lvl) {\n    this.waterLevel = lvl;\n  }\n\n  getHumidityLevel() {\n    return this.humidityLevel;\n  }\n\n  setHumidityLevel(lvl) {\n    this.humidityLevel = lvl;\n  }\n\n  getWaterGateState() {\n    return this.waterGateState;\n  }\n\n  setWaterGateState(state) {\n    this.waterGateState = state;\n  }\n\n  getWaterGateOpenedAt() {\n    return this.waterGateOpenedAt;\n  }\n\n  setWaterGateOpenedAt(time) {\n    this.waterGateOpenedAt = time;\n  }\n\n  getOpenTime() {\n    return this.openTime;\n  }\n\n  logData = () => {\n    if (this.uid !== null) {\n      console.log(`[${this.uid}] Water Level: ${this.waterLevel}`);\n      console.log(`[${this.uid}] Humidity Level: ${this.humidityLevel}`);\n    }\n  };\n}\n\n\n// WEBPACK FOOTER //\n// ./src/server/Station.js","module.exports = {\n  host: 'localhost',\n  // host: '192.168.1.115',\n  port: {\n    web: 8080,\n    server: 3000,\n  },\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/secret/connect.js\n// module id = 1\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"serialport\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"serialport\"\n// module id = 4\n// module chunks = 0","// dependencies\nconst Express = require('express');\nconst SerialPort = require('serialport');\nconst bodyParser = require('body-parser');\nconst connect = require('../secret/connect');\n\nimport Station from './Station';\n\n// server\nconst app = new Express();\n\nclass Server {\n  constructor() {\n    this.stations = [];\n    this.serialport = null;\n    this.allTanksActive = 0;\n\n    this.init();\n    this.routes();\n\n    console.log('Server started!');\n  }\n\n\n  /* ======================================= */\n  // SERVER INITIALIZATION\n  /* ======================================= */\n\n  // initialize express server\n  init = () => {\n    // block the header from containing information about the server\n    app.disable('x-powered-by');\n\n    // body parser —to be able to read body content\n    app.use(bodyParser.urlencoded({ extended: true }));\n    app.use(bodyParser.json());\n\n    // open serialport\n    this.openSerialport();\n\n    // start watergate check interval\n    // setInterval(this.shouldWaterGateOpen, 1000)\n\n    // create some stations\n    this.createStations(10);\n\n    // routes\n    this.routes();\n\n    // start server!\n    this.startServer();\n  };\n\n  openSerialport = () => {\n    this.serialport = new SerialPort('/dev/cu.usbmodem1421', { parser: SerialPort.parsers.readline('\\n') });\n    this.handleSerialPortEvents();\n  };\n\n  handleSerialPortEvents = () => {\n    this.serialport\n        .on('error', err => {\n          console.log('Serial Port could not be opened:', err);\n        })\n        .on('open', () => {\n          console.log('Serial Port Opened');\n        })\n        .on('data', data => {\n          console.log(data);\n          // data looks something like this\n          // UIDw45\n\n          // grab uid from char [0] to [3]\n          const uid = data.slice(0, 3); // grab uid\n\n          for (let [id, station] of this.stations.entries()) {\n            const length = this.stations.length - 1;\n\n            if (station.uid !== uid) {\n              // if we come this far we might have a new station that should be installed\n              if (id === length) {\n                this.initNewStation(uid);\n                break;\n              }\n\n              continue;\n            }\n\n            // value is placed after uid and its data mark (so we cut away 'UIDw' for example)\n            const val = data.slice(4, data.length);\n\n            // [3] is the data mark so we can identify what data we are receiving\n            if (data[3] === 'w')\n              this.stations[id].setWaterLevel(val);\n\n            if (data[3] === 'h')\n              this.stations[id].setHumidityLevel(val);\n\n            if (data[3] === 'g') {\n              let station = this.getStationWithUid(uid);\n\n              if (station === null) {\n                console.log('no station found');\n                return;\n              }\n\n              // close gate\n              if (data[4] === '0') {\n                console.log('Close the gate for tank', station.uid);\n                station.setWaterGateState(false);\n              }\n\n              // open state\n              if (data[4] === '1') {\n                console.log('Open the gates for tank', station.uid);\n                station.setWaterGateOpenedAt(Date.now());\n                station.setWaterGateState(true);\n              }\n            }\n          }\n        });\n  };\n\n  writeToSerialPort = (str) => {\n    // Sending String character by character\n    for (let i = 0; i < str.length; i += 1) {\n      this.serialport.write(new Buffer(str[i], 'ascii'));\n    }\n\n    // Sending the terminate character\n    this.serialport.write(new Buffer('#', 'ascii'));\n  };\n\n  // set routes\n  routes() {\n    app.use((req, res, next) => {\n      res.header('Access-Control-Allow-Origin', '*');\n      res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');\n      next();\n    });\n\n    app.use((req, res, next) => {\n      res.header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');\n      next();\n    });\n\n    app.options('*', this.getOptions);\n\n    app.get('/waterlevel/:id', this.getWaterLevel);\n    app.get('/gatestate/:id', this.getStationGateState);\n    app.get('/getbigbutton', this.getBigButton);\n\n    app.post('/setgate', this.setStationGateState);\n    app.post('/setbigbutton', this.setBigButton);\n\n    // 404 page\n    app.use((req, res) => res.sendStatus(404));\n  }\n\n  // get port and start server\n  startServer() {\n    app.set('port', (process.env.PORT || connect.port.server || 3000));\n    app.listen(app.get('port'), () => console.log(`Node Server is running on port ${app.get('port')}`));\n  }\n\n\n  /* ======================================= */\n  // STATIONS\n  /* ======================================= */\n\n  createStations(amount) {\n    for (let i = 0; i < amount; i += 1) {\n      const station = new Station(i);\n      this.stations.push(station);\n    }\n  }\n\n  initNewStation(uid) {\n    for (let [i, station] of this.stations.entries()) {\n      const sUid = station.uid;\n\n      // if uid already exists then stop\n      if (uid === sUid)\n        break;\n\n      // try to insert new station to array\n      if (!sUid || sUid === null) {\n        station.setUid(uid);\n        console.log(`new station added with uid: ${station.getUid()} at index: ${i}`);\n        break;\n      }\n    }\n  }\n\n  getStationWithUid(uid) {\n    let station = null;\n\n    this.stations.forEach((s) => {\n      if (s.uid === uid)\n        station = s;\n    });\n\n    return station;\n  }\n\n  convertWaterHeightToPrct(val) {\n    let prct = 130 - 13 * val / 10;\n\n    if (prct > 100) return 100;\n    if (prct < 0) return 0;\n\n    return prct;\n  }\n\n  convertHumidityValToPrct(val) {\n    let prct = Math.floor(6000 / 23 - (10 * val) / 23);\n    if (prct > 100) return 100;\n    if (prct < 0) return 0;\n\n    return prct;\n  }\n\n  shouldWaterGateOpen = () => {\n    for (let station of this.stations) {\n      if (station.waterLevel === null || station.humidityLevel === null)\n        continue;\n\n      let waterPrct = this.convertWaterHeightToPrct(station.waterLevel);\n      let humidPrct = this.convertHumidityValToPrct(station.humidityLevel);\n\n      if (waterPrct > 80 && humidPrct > 50) {\n        if (station.waterGateState === false) {\n          // emit to arduino to open gate\n          this.writeToSerialPort('g1');\n        } else {\n          // console.log(`Gate of tank ${station.uid} is already open`)\n        }\n      } else {\n        if (station.getWaterGateOpenedAt() !== null) {\n          if (station.getWaterGateState() === true) {\n\n            // we can close gate again after some time\n            if (Date.now() - station.waterGateOpenedAt > station.openTime) {\n              // emit to arduino to open gate\n              this.writeToSerialPort('g0');\n            }\n          } else {\n            // console.log('Gate is already closed for tank', station.uid)\n          }\n        } else {\n          // console.log('No need to open gate for tank', station.uid)\n        }\n      }\n    }\n  };\n\n\n  getOptions = (req, res, next) => res.json(res.get('Access-Control-Allow-Methods'));\n\n  /* ======================================= */\n  // @WidgetStore.setStationGateState\n  /* ======================================= */\n\n  setStationGateState = (req, res) => {\n    if (typeof req.body.tankId === 'undefined' || req.body.tankId === null ||\n        typeof req.body.state === 'undefined' || req.body.state === null) {\n      console.log(req.body);\n      throw new Error('Expected object with tankId and/or state');\n    }\n\n    const id = req.body.tankId;\n    const state = req.body.state;\n\n    // console.log('opening gate for tank ', id)\n\n    // write state to arduino\n    let str = state ? 'g1' : 'g0';\n    this.writeToSerialPort(str);\n\n    // save state to station\n    this.stations[id].setWaterGateState(state);\n\n    // return state\n    res.json(state);\n  };\n\n  setBigButton = (req, res) => {\n    const state = req.body.state;\n    this.allTanksActive = state;\n\n    res.json(state);\n  };\n\n  getBigButton = (req, res, next) => res.json(this.allTanksActive);\n\n\n  /* ======================================= */\n  // @WidgetStore.getWaterLevel\n  /* ======================================= */\n\n  getWaterLevel = (req, res) => {\n    const id = parseInt(req.params.id);\n    const waterLevel = this.stations[id].waterLevel;\n\n    res.json(waterLevel);\n  };\n\n\n  /* ======================================= */\n  // @WidgetStore.getStationGateState\n  /* ======================================= */\n\n  getStationGateState = (req, res) => {\n    const id = parseInt(req.params.id);\n    const gateState = this.stations[id].getWaterGateState();\n\n    res.json(gateState);\n  };\n}\n\nnew Server();\n\n\n// WEBPACK FOOTER //\n// ./src/server/index.js"],"sourceRoot":""}